<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mobaijun-spring-boot-dependencies</artifactId>
        <groupId>com.mobaijun</groupId>
        <version>3.0.1</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>base-model-spring-boot-starter</artifactId>
    <version>3.0.1</version>

    <name>${project.artifactId}</name>
    <description>This is a spring boot basic entity tool module, commonly used paging plug-ins,
        MySQL operation basic classes
    </description>
    <inceptionYear>2022</inceptionYear>
    <url>https://github.com/mobaijun/mobaijun-spring-boot-dependencies/tree/main/base-model-spring-boot-starter</url>

    <!--  GitHub issues -->
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/mobaijun/mobaijun-spring-boot-dependencies/issues</url>
    </issueManagement>

    <scm>
        <url>https://github.com/mobaijun/mobaijun-spring-boot-dependencies/tree/main/base-model-spring-boot-starter
        </url>
        <connection>https://github.com/mobaijun/mobaijun-spring-boot-dependencies.git</connection>
        <developerConnection>https://github.com/mobaijun</developerConnection>
    </scm>

    <dependencies>
        <!-- Swagger 注解库，用于自动生成 API 文档。
             注意：这里重复了 swagger-annotations 依赖，通常你只需要一个，
             并且根据你的项目需求（是否由容器提供）来设置作用域。
             这里我移除了带有 provided 作用域的那个，因为它通常不是由容器提供的。
        -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Lombok 库，用于减少 Java 代码的冗余，如自动生成 getter/setter 等。
             设置为 provided 作用域通常不是必要的，因为 Lombok 主要在编译时工作，
             但它不会由 JDK 或容器提供，所以这里可能是个错误。
             通常，Lombok 的作用域应为 compile（默认）。
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- MyBatis-Plus 的注解库，用于简化 MyBatis 的使用。
             同样，设置为 provided 作用域可能不是必要的，除非你的运行环境已经包含了这些注解。
        -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-annotation</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- JSR 303 Bean Validation API，用于校验 JavaBeans。
             设置为 provided 作用域可能适用于某些特定环境，如 Java EE 容器，
             但在大多数独立应用程序中，它应该是 compile 作用域。
        -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
